<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc  
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">
 	
 	<!-- 配置注解扫描器 -->
 	<context:component-scan base-package="com.ssm.web.controller"></context:component-scan>
 	
 	<!-- 注解驱动 -->
 	<mvc:annotation-driven></mvc:annotation-driven>
 	

 	<!-- 配置允许访问静态资源
 	注意踩坑处，location: 表名位于磁盘中的真正路径，也表名写以及目录就行，否则写了子目录，可能造成静态资源加载失败
 	 -->
 	<mvc:resources location="/static/" mapping="/static/**"></mvc:resources>
 	<mvc:resources location="/images/" mapping="/images/**"></mvc:resources>
 	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
 	<mvc:resources location="/css/" mapping="/css/**"></mvc:resources>


	<!-- 配置对应的没有权限时，或者未认证操作某些模块的时候抛出异常时进行处理的地方-->
	<bean id="exceptionResovler" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!--注入属性为properties类型，当出现对应异常时，跳到指定的路径界面进行处理-->
		<property name="exceptionMappings">
			<props>
				<!-- 操作异常 -->
				<prop key="java.lang.Exception">/error</prop>
				<!--认证异常-->
				<prop key="org.apache.shiro.authz.UnauthenticatedException">/toLogin</prop>
				<!--授权异常-->
				<prop key=" org.apache.shiro.authz.UnauthorizedException">/error</prop>
			</props>
		</property>
	</bean>

   <!-- 配置视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 为了让shiro中获取的权限在注解中有效，开启aop代理 使用cglib动态代理-->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 实现aop代理的配置，找到所有的bean配置类，转成自动代理模式-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    
    
	<!-- 配置对应的shiro权限注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
	
	<!-- 配置SpringMVC的拦截器，拦截未登录的用户,拦截所有的请求 -->
   <mvc:interceptors>
   		<mvc:interceptor>
   			<mvc:mapping path="/**"/>
   			<mvc:exclude-mapping path="/login"/>
   			<mvc:exclude-mapping path="/toLogin"/>
   			<mvc:exclude-mapping path="/rest/admin/logout"/>
   			<mvc:exclude-mapping path="/user/login"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<bean id="interceptor" class="com.ssm.interceptor.UserInterceptor"></bean>
   		</mvc:interceptor>
	</mvc:interceptors>

 </beans>